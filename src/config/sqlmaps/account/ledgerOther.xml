<?xml version="1.0" encoding="UTF-8"?>	
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="ledgerPeopleAspirations">

	<typeAlias alias="other"
		type="com.tianque.plugin.account.domain.Other" />

	<resultMap id="otherResult" class="other">
		<result property="id" column="id" />
		<result property="buildType.id" column="buildType" />
		<result property="projectName" column="projectName" />
		<result property="scopeContent" column="scopeContent" />
		<result property="otherContent" column="otherContent" />
		<result property="plannedInvestment" column="plannedInvestment" />
		<result property="selfFund" column="selfFund" />
		<result property="gapFund" column="gapFund" />
		<result property="fromAddress" column="fromAddress" />
		<result property="toAddress" column="toAddress" />
		<result property="peopleAspiration.id" column="ledgerPeopleAspirationsId" />
		<result property="beneficiaryNumber" column="beneficiaryNumber" />
		<result property="otherBuildTypeContent" column="otherBuildTypeContent" />
		<result property="projectCategory.id" column="projectCategory" />
		
		
		
	</resultMap>


	<select id="getOtherByAspirationsId" parameterClass="java.lang.Long"
		resultMap="otherResult">
		select * from ledgerOther where ledgerPeopleAspirationsId=#value#
	</select>

	<select id="getOtherById" parameterClass="java.lang.Long"
		resultMap="otherResult">
		select * from ledgerOther where id=#value#
	</select>

	<insert id="addOther" parameterClass="other">
		<selectKey keyProperty="id" resultClass="java.lang.Long">
			<![CDATA[SELECT S_ledgerOther.NEXTVAL as id from dual ]]>
		</selectKey>
		insert into ledgerOther (  ID,ledgerPeopleAspirationsId,buildType  ,projectName  ,scopeContent    ,otherContent ,plannedInvestment  ,selfFund     ,gapFund      
		,fromAddress  ,toAddress    ,createUser   ,updateUser   ,createDate   ,updateDate ,beneficiaryNumber,otherBuildTypeContent,projectCategory)
		values( #id#,#peopleAspiration.id#,#buildType.id#,#projectName#,#scopeContent#,#otherContent#,#plannedInvestment#,#selfFund#,#gapFund#,#fromAddress#,#toAddress#,#createUser#,#updateUser#,#createDate#,#updateDate#,#beneficiaryNumber#,#otherBuildTypeContent#,#projectCategory.id# )	
		</insert>

	<update id="updateOther" parameterClass="other">
		update ledgerOther set 
			scopeContent = #scopeContent#,
			buildType = #buildType.id#,
			projectName = #projectName#,
			otherContent = #otherContent#,
			plannedInvestment = #plannedInvestment#,
			selfFund=#selfFund#,
			gapFund = #gapFund#,
			fromAddress = #fromAddress#,
			toAddress = #toAddress#,
			updateDate = #updateDate#,
			UPDATEUSER = #updateUser#,
			beneficiaryNumber = #beneficiaryNumber#,
			otherBuildTypeContent = #otherBuildTypeContent#,
			projectCategory = #projectCategory.id#
		where id = #id#
	</update>

	<delete id="deleteOtherByAspirationId" parameterClass="java.lang.Long">
		delete from ledgerOther where ledgerPeopleAspirationsId = #value#	
	</delete>


</sqlMap>