package com.tianque.plugin.account.dao;

import java.util.List;

import com.tianque.core.vo.PageInfo;
import com.tianque.domain.Organization;
import com.tianque.plugin.account.vo.LedgerPoorPeopleVo;
import com.tianque.plugin.account.vo.SearchComprehensiveVo;

public interface LedgerPoorPeopleComprehensiveDao {

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsNeedDo(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType, Integer isSupported);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsDone(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsFeedBack(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsSubStanceDone(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPeriodDone(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsAssgin(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsSubmit(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);

	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsCreateAndDone(SearchComprehensiveVo searchVo, 
			List<Organization> orgs, List<Long> childOrg, Integer page, Integer rows, Long functionalOrgType, Integer viewProcess, Long sourceType);
}
