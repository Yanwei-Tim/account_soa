<?xml version="1.0" encoding="UTF-8"?>	
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="ledgerSteadyWorkComprehensive">

	<typeAlias alias="ledgerSteadyWork"
		type="com.tianque.plugin.account.domain.LedgerSteadyWork" />
	<typeAlias alias="BaseWork"
		type="com.tianque.plugin.account.domain.BaseWorking" />
	<typeAlias alias="LedgerStedayWorkDetail" type="com.tianque.plugin.account.vo.LedgerStedayWorkDetail" />		
	<typeAlias alias="LedgerPeopleSubstanceDesc" type="com.tianque.plugin.account.vo.LedgerPeopleSubstanceDesc" />

	<typeAlias alias="ledgerSteadyWorkVo"
		type="com.tianque.plugin.account.vo.LedgerSteadyWorkVo" />
	<resultMap id="ledgerSteadyWorkFullVoResult" class="ledgerSteadyWorkVo">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="birthDay" column="birthDay" />
		<result property="mobileNumber" column="mobileNumber" />
		<result property="serialNumber" column="serialnumber" />
		<result property="subject" column="subject" />
		<result property="status" column="status" />
		<result property="occurDate" column="occurdate" />
		<result property="occurOrg.id" column="occurorgId" />
		<result property="sourceKind.id" column="sourcekind" />
		<result property="createUser" column="CREATEUSER" />
		<result property="createOrg.id" column="createOrg" />
		<result property="hours" column="hours" />
		<result property="minute" column="minute" />
		<result property="createTableType.id" column="createTableType" />
		<result property="currentOrg.id" column="CURRENTORG" />
		<result property="targetOrg.id" column="targetOrg" />
		<result property="lastdealDate" column="lastdealdate" />
		<result property="stepId" column="stepId" />
		<result property="superviseLevel" column="superviseLevel" />
		<result property="delayState" column="delayState" />
		<result property="stateCode" column="stateCode" />
		<result property="state" column="state" />
		<result property="involvingSteadyInfo" column="involvingSteadyInfo" />
	</resultMap>
	
	<resultMap class="LedgerStedayWorkDetail" id="groupBySteadyWorkTypeResult">
		<result property="steadyWorkType" column="steadyWorkType" />
		<result property="count" column="count" />
	</resultMap>
	<resultMap class="LedgerStedayWorkDetail" id="groupBySteadyWorkWarnLevelResult">
		<result property="steadyWorkType" column="steadyWorkType" />
		<result property="steadyWorkWarnLevel" column="steadyWorkWarnLevel" />
		<result property="responseGroupNo" column="responseGroupNo" />
		<result property="count" column="count" />
	</resultMap>
	<resultMap class="LedgerPeopleSubstanceDesc" id="countDescResult">
		<result property="dealdescription" column="dealdescription" />
		<result property="count" column="count" />
	</resultMap>
	
	
	<sql id="sql_steadyWork_select">
		<dynamic>
			<isNotNull property="steadyWorkType">  
				<![CDATA[   and lsw.steadyWorkType = #steadyWorkType# ]]>
			</isNotNull>
			
			<isNotNull property="steadyWorkWarnLevel">  
				<![CDATA[   and lsw.STEADYWORKWARNLEVEL = #steadyWorkWarnLevel# ]]>
			</isNotNull>
			
			<isNotNull property="involvingSteadyInfo">  
				<![CDATA[   and lsw.INVOLVINGSTEADYINFO like  '%'||#involvingSteadyInfo#||'%' ]]>
			</isNotNull>
			
			<isNotNull property="beginCreateDate">  
				<![CDATA[   and lsw.createDate > #beginCreateDate# ]]>
			</isNotNull> 
			
			<isNotNull property="endCreateDate">  
				<![CDATA[   and lsw.createDate < #endCreateDate# ]]>
			</isNotNull> 
		</dynamic>
	</sql>
	
	<select id="getCountGroupByDesc" parameterClass="map" resultMap="countDescResult">
		<![CDATA[ select lg.dealdescription,count(lg.ledgerid) count from platformaccountlogs lg, ledgersteadywork lsw where lg.ledgerid = lsw.id and lg.ledgerType = 3 and lg.dealType = 31
 		and lsw.orginternalcode like #orgCode#||'%']]>
 		 <include refid="sql_steadyWork_select" />
 		<![CDATA[ group by lg.dealdescription]]>
	</select>
	
	<select id="getCountGroupBySteadyWorkType" parameterClass="map" resultMap="groupBySteadyWorkTypeResult">
		<![CDATA[ select lsw.steadyWorkType steadyWorkType,count(lp.id) count from ledgersteadywork lsw,ledgerSteadyWorkPeopleInfo lp where lsw.id = lp.steadyworkid
		and lsw.orginternalcode like #orgCode#||'%']]>
		<include refid="sql_steadyWork_select" />
		<![CDATA[ group by lsw.steadyWorkType]]>
	</select>
	
	<select id="getCountGroupBySteadyWorkWarnLevel" parameterClass="map" resultMap="groupBySteadyWorkWarnLevelResult">
		<![CDATA[ select lsw.steadyWorkType,lsw.steadyWorkWarnLevel,sum(lsw.involvingSteadyNum) responseGroupNo,count(lsw.id) count from ledgersteadywork lsw 
		where lsw.orginternalcode like #orgCode#||'%']]>
		 <include refid="sql_steadyWork_select" />
		<![CDATA[ group by lsw.steadyWorkType,lsw.steadyWorkWarnLevel]]>
	</select>

	<sql id="sql_findJurisdictions_leaderView">
		<dynamic>
			<isPropertyAvailable property="issueType"
				prepend=" and ">
				cstep.ledgerType = #issueType#
			</isPropertyAvailable>
			<isEqual property="seachValue" compareValue="all">
				  <!--   <![CDATA[  and cstep.targetinternalcode like #orgCode#||'%' ]]>-->
			  		<iterate  prepend=" and " conjunction="or" property="orgCode" open="(" close=")">
						cstep.targetinternalcode like #orgCode[]#||'%'
					</iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="present">
				  <!--  <![CDATA[    and cstep.targetinternalcode = #orgCode#  ]]> -->
			  		<iterate property="orgCode" open="and cstep.targetinternalcode in (" conjunction="," close=")">  
                     	#orgCode[]#  
                   </iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="subordinate">
               <isNotNull property="targetOrgs">  
			       <iterate property="targetOrgs" open="and cstep.target in (" conjunction="," close=")">  
                     #targetOrgs[]#  
                   </iterate>  
			   </isNotNull>  
			</isEqual>
		</dynamic>
	</sql>


	<sql id="sql_findJurisdictions_result">
		select
		lsw.name,lsw.mobileNumber,lsw.birthDay,
		lsw.id,
		lsw.serialnumber,
		lsw.subject,
		lsw.status,
		lsw.occurdate,
		lsw.occurOrgID as occurorgID,
		lsw.sourcekind,
		lsw.CREATEUSER,
		lsw.orgId as createOrg,
		lsw.hours,
		lsw.minute,
		lsw.createTableType,
		lsw.involvingSteadyInfo,
		cstep.source currentOrg,
		cstep.target targetOrg,
		cstep.lastdealdate,
		cstep.id as stepId,
		cstep.superviselevel,
		cstep.statecode,
		cstep.state,
		cstep.delayState
	</sql>

	<sql id="sqlResult">
		select
		lsw.name,lsw.mobileNumber,lsw.birthDay,
		lsw.id,
		lsw.serialnumber,
		lsw.subject,
		lsw.status,
		lsw.occurdate,
		lsw.occurOrgID as occurorgID,
		lsw.sourcekind,
		lsw.CREATEUSER,
		lsw.orgId as createOrg,
		lsw.hours,
		lsw.minute,
		lsw.createTableType,
		lsw.involvingSteadyInfo,
		istep.source currentOrg,
		istep.target targetOrg,
		istep.lastdealdate,
		istep.id as stepId,
		istep.superviselevel,
		istep.statecode,
		istep.state,
		istep.delayState
    </sql>

	<!-- 待办事件列表   lsw.createOrg, iu.lastOrg,-->
	<select id="findJurisdictionsNeedDo" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sql_findJurisdictions_result" />
	   <![CDATA[  from platformAccountSteps cstep,ledgerSteadyWork lsw  
			where lsw.id=cstep.ledgerId  ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	   <![CDATA[ and cstep.stateCode<#completeCode# and cstep.isSupported=#isSupported# ]]>
		<include refid="sql_steadyWork_select" />
	</select>

	<!-- 待办事件数量 -->	<!--判断是否查询所有，本级，下辖-->
	<select id="countfindJurisdictionsNeedDo" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[select count(*) from platformAccountSteps cstep,ledgerSteadyWork lsw where lsw.id=cstep.ledgerId	]]>
		<include refid="sql_findJurisdictions_leaderView" />
		<![CDATA[ 	and cstep.stateCode<#completeCode#   ]]>
		<isPropertyAvailable property="isSupported">
			<isNotNull property="isSupported" >
				and cstep.isSupported = #isSupported#
			</isNotNull>
		</isPropertyAvailable>
		<isNotPropertyAvailable property="isSupported">
			and cstep.isSupported = 0
		</isNotPropertyAvailable>
		<include refid="sql_steadyWork_select" />
	</select>

	<sql id="_sql_findJurisdictions_leaderView">
		<dynamic>
			<isPropertyAvailable property="issueType"
				prepend=" and ">
				plat.ledgerType = #issueType#
			</isPropertyAvailable>
			<isEqual property="seachValue" compareValue="all">
				  <!-- <![CDATA[  and targetinternalcode like #orgCode#||'%' ]]> -->
			  		<iterate  prepend=" and " conjunction="or" property="orgCode" open="(" close=")">
						plat.targetinternalcode like #orgCode[]#||'%'
					</iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="present">
				  <!-- <![CDATA[    and targetinternalcode = #orgCode#  ]]> -->
			  	<iterate property="orgCode" open="and plat.targetinternalcode in (" conjunction="," close=")">  
                     	#orgCode[]#  
                   </iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="subordinate">
               <isNotNull property="targetOrgs">  
			       <iterate property="targetOrgs" open="and plat.target in (" conjunction="," close=")">  
                     #targetOrgs[]#  
                   </iterate>  
			   </isNotNull>  
			</isEqual>
		</dynamic>
	</sql>
	
	
	<!-- 已办事件列表 -->
	<select id="findJurisdictionsDone" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select * from (select cstep.*,row_number()over(partition by cstep.ledgerId order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep    where cstep.stateCode = #completeCode# and cstep.isFeedBack=1 ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
		 		where istep.ledgerId = lsw.id ]]>
		 		
		 		 <![CDATA[ and istep.ledgerid not in(select ledgerid from platformaccountsteps p where dealType = #complete# and ledgerid in 
 		 (select ledgerid from platformaccountsteps plat where stateCode = #completeCode# or stateCode = #substanceCode# and isFeedBack=1 ]]>  
        		<include refid="_sql_findJurisdictions_leaderView" />        
                <![CDATA[ group by ledgerid) and p.ledgertype = #issueType#) ]]>
		 		
		<include refid="sql_steadyWork_select" />
	</select>

	<!-- 已办台账数量 -->
	<select id="countfindJurisdictionsDone" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[select count(0) from (select ledgerId
	          from platformAccountSteps
	         where id in
	               (select max(id)
	                  from platformAccountSteps cstep
	                 where cstep.stateCode = #completeCode# and cstep.isFeedBack=1]]>
		<include refid="sql_findJurisdictions_leaderView" />
	   <![CDATA[ group by ledgerId)) istep,ledgerSteadyWork lsw where istep.ledgerId=lsw.id ]]>
	   
	   <![CDATA[ and istep.ledgerid not in(select ledgerid from platformaccountsteps p where dealType = #complete# and ledgerid in 
 		 (select ledgerid from platformaccountsteps plat where stateCode = #completeCode# or stateCode = #substanceCode# and isFeedBack=1 ]]>  
        		<include refid="_sql_findJurisdictions_leaderView" />        
                <![CDATA[ group by ledgerid) and p.ledgertype = #issueType#) ]]>
	   <include refid="sql_steadyWork_select" />
	</select>

	<!-- 下辖待反馈台账列表 -->
	<select id="findJurisdictionsFeedBack" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[	
			   from (select * from platformAccountSteps where id in (select max(cstep.id) from platformAccountSteps cstep where 1=1
		]]>
		<isPropertyAvailable property="issueType" prepend=" and ">
			cstep.ledgerType = #issueType#
		</isPropertyAvailable>
		<![CDATA[ group by cstep.ledgerId,cstep.ledgerType)) istep, ledgerSteadyWork lsw 
			 where istep.ledgerId= lsw.id  and lsw.isCanFeedBack=0 ]]>
		<isEqual property="seachValue" compareValue="all">
				  <!-- <![CDATA[  and lsw.orginternalcode like #orgCode#||'%' ]]>-->
			  <iterate  prepend=" and " conjunction="or" property="orgCode" open="(" close=")">
						lsw.orginternalcode like #orgCode[]#||'%'
			  </iterate>
		</isEqual>
		<isEqual property="seachValue" compareValue="present">
			  <!--  <![CDATA[    and lsw.orgId = #orgId#  ]]>-->
			  <iterate property="orgId" open="and lsw.orgId in (" conjunction="," close=")">  
                    #orgId[]#  
              </iterate>
		</isEqual>
		<isEqual property="seachValue" compareValue="subordinate">
			   <isNotNull property="targetOrgs">  
			       <iterate property="targetOrgs" open="and lsw.orgId in (" conjunction="," close=")">  
                     #targetOrgs[]#  
                   </iterate>  
			   </isNotNull>  
		</isEqual>	 
		<include refid="sql_steadyWork_select" />
	</select>

	<!-- 反馈台帐数量 -->
	<select id="countfindJurisdictionsFeedBack" parameterClass="map"
		resultClass="java.lang.Integer">
	<![CDATA[select count(0) from (select ledgerId,ledgerType  , stateCode,id
		  from platformaccountsteps
		 where id in (select max(cstep.id) from platformaccountsteps cstep where 1=1
	]]>
	<isPropertyAvailable property="issueType" prepend=" and ">
			cstep.ledgerType = #issueType#
		</isPropertyAvailable>
	<![CDATA[  group by cstep.ledgerId,cstep.ledgerType) ) istep,ledgerSteadyWork lsw  where istep.ledgerId=lsw.id  
	    and lsw.isCanFeedBack=0 ]]>
	  <isEqual property="seachValue" compareValue="all">
				  <!-- <![CDATA[  and lsw.orginternalcode like #orgCode#||'%' ]]>-->
			  <iterate  prepend=" and " conjunction="or" property="orgCode" open="(" close=")">
						lsw.orginternalcode like #orgCode[]#||'%'
			  </iterate>
	  </isEqual>
		<isEqual property="seachValue" compareValue="present">
			  <!--  <![CDATA[    and lsw.orgId = #orgId#  ]]>-->
			  <iterate property="orgId" open="and lsw.orgId in (" conjunction="," close=")">  
                    #orgId[]#  
              </iterate>
		</isEqual>
		<isEqual property="seachValue" compareValue="subordinate">
			   <isNotNull property="targetOrgs">  
			       <iterate property="targetOrgs" open="and lsw.orgId in (" conjunction="," close=")">  
                     #targetOrgs[]#  
                   </iterate>  
			   </isNotNull>  
		</isEqual>	   
	    <include refid="sql_steadyWork_select" />
	</select>

	<!-- 下辖上报台账列表 -->
	<select id="findJurisdictionsSubmit" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select * from (select cstep.*,row_number()over(partition by cstep.ledgerId order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep    where cstep.submit = #submit# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
		 		where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />
	</select>

	<!-- 下辖上报台账数量 -->
	<select id="countfindJurisdictionsSubmit" parameterClass="map"
		resultClass="java.lang.Integer">
		select count(0)
		<![CDATA[ from (select * from (select cstep.*,row_number()over(partition by cstep.ledgerId order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep   where cstep.submit = #submit# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
		 		where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />		 		
	</select>
	
	<!-- 下辖阶段已办事件列表 -->
	<select id="findJurisdictionsPeriodDone" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select *  from (select cstep.*,row_number()over(partition by cstep.ledgerId,cstep.ledgerType order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep   where cstep.stateCode = #completeCode# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	   <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
 				where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />		
	</select>


	<!-- 下辖实质已办台账数量 -->
	<select id="countfindJurisdictionsPeriodDone" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[select count(0) from (select ledgerId   from platformAccountSteps
	         	where id in (select max(id) from platformAccountSteps cstep   where cstep.stateCode = #completeCode# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ group by ledgerId)) istep,ledgerSteadyWork lsw where istep.ledgerId=lsw.id ]]>
	    <include refid="sql_steadyWork_select" />		
	</select>


	<!-- 下辖上级交办台账列表 -->
	<select id="findJurisdictionsAssgin" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select * from (select cstep.*,row_number()over(partition by cstep.ledgerId order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep    where cstep.assign = #assgin# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
		 		where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />		
	</select>

	<!-- 下辖上级交办台账数量 -->	<!--判断是否查询所有，本级，下辖-->
	<select id="countfindJurisdictionsAssgin" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[ select count(0)  from (select * from (select cstep.*,row_number()over(partition by cstep.ledgerId order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep  where cstep.assign = #assgin# ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
		 		where istep.ledgerId = lsw.id ]]>
		 <include refid="sql_steadyWork_select" />		
	</select>


	<sql id="sql_findJurisdictions_leaderView_">
		<dynamic>
			<isEqual property="seachValue" compareValue="all">
			  <!--  <![CDATA[  and pl.targetinternalcode like #orgCode#||'%' ]]> -->
			  		<iterate  prepend=" and " conjunction="or" property="orgCode" open="(" close=")">
						pl.targetinternalcode like #orgCode[]#||'%'
					</iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="present">
			  <!--  <![CDATA[    and pl.targetinternalcode = #orgCode#  ]]> -->
			 		<iterate property="orgCode" open="and pl.targetinternalcode in (" conjunction="," close=")">  
                     	#orgCode[]#  
                    </iterate>
			</isEqual>
			<isEqual property="seachValue" compareValue="subordinate">
			   <isNotNull property="targetOrgs">  
			       <iterate property="targetOrgs" open="and pl.target in (" conjunction="," close=")">  
                     #targetOrgs[]#  
                   </iterate>  
			   </isNotNull>  
			</isEqual>
		</dynamic>
	</sql>
	<!-- 下辖实质已办台账列表(只要经过了此部门，台账实质性办结后都显示在此部门的实质性办结中) -->
	<select id="findJurisdictionsSubstanceDone" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select * from (select pl.*,row_number()over(partition by pl.ledgerid order by pl.id desc) as rn from platformaccountsteps pl 
		where pl.ledgerid in (select ledgerid from (select cstep.*,row_number()over(partition by cstep.ledgerId,cstep.ledgerType order by cstep.id desc ) as rnk 
		from platformAccountSteps cstep  where cstep.stateCode = #completeCode# and cstep.ledgerType = #issueType#) where rnk = 1) and pl.ledgertype = #issueType#]]>
		<include refid="sql_findJurisdictions_leaderView_" />
	    <![CDATA[ ) where rn=1) istep,ledgerSteadyWork lsw 
 			where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />		
	</select>
	

	<select id="countfindJurisdictionsSubstanceDone" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[select count(0) from (select * from (select pl.*,row_number()over(partition by pl.ledgerid order by pl.id desc) as rn from platformaccountsteps pl where pl.ledgerid in 
    (select ledgerid from (select cstep.*,row_number()over(partition by cstep.ledgerId,cstep.ledgerType order by cstep.id desc ) as rnk 
    from platformAccountSteps cstep  where 
    cstep.stateCode = #completeCode# and cstep.ledgerType = #issueType#) where rnk = 1) 
    and pl.ledgertype = #issueType# ]]>
		<include refid="sql_findJurisdictions_leaderView_" />
	                <![CDATA[ ) where rn = 1) istep,ledgerSteadyWork lsw where istep.ledgerId = lsw.id ]]>
	   <include refid="sql_steadyWork_select" />	
	</select>
	
	
	<!-- 下辖已办和新建台账列表 -->
	<select id="findJurisdictionsCreateAndDone" parameterClass="map"
		resultMap="ledgerSteadyWorkFullVoResult">
		<include refid="sqlResult" />
		<![CDATA[ from (select *  from (select cstep.*,row_number()over(partition by cstep.ledgerId,cstep.ledgerType order by cstep.id desc ) as rnk
                  from platformAccountSteps cstep   where cstep.stateCode in (500,600,700,120) ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	   <![CDATA[ ) where rnk=1)  istep,ledgerSteadyWork lsw   
 				where istep.ledgerId = lsw.id ]]>
		<include refid="sql_steadyWork_select" />	
	</select>
	
	<!-- 下辖已办和新建台账数量 -->
	<select id="countfindJurisdictionsCreateAndDone" parameterClass="map"
		resultClass="java.lang.Integer">
		<![CDATA[select count(0) from (select ledgerId   from platformAccountSteps
	         	where id in (select max(id) from platformAccountSteps cstep   where cstep.stateCode in (500,600,700,120) ]]>
		<include refid="sql_findJurisdictions_leaderView" />
	    <![CDATA[ group by ledgerId)) istep,ledgerSteadyWork lsw where istep.ledgerId=lsw.id ]]>
	    <include refid="sql_steadyWork_select" />	
	</select>
</sqlMap>